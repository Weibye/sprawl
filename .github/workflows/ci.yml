on:
  pull_request:
  push:
    branches:
      - main
      - 0.2.x
      - 0.3.x

name: Continuous integration

jobs:
  test-features-default:
    name: "Test Suite [Features: Default]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: |
          cargo build
          cargo test
  
  # This tests all enabled default features with each of the optional features on top.
  test-features-with-default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [serde, random, alloc]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: |
          cargo build --features ${{ matrix.feature }}
          cargo test --features ${{ matrix.feature }}
  
  # This test all layout features with each of the optional features in isolation.
  test-features-without-default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        layout: [flexbox, grid, none]
        feature: [std, alloc, serde, none]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
      - if: ${{ matrix.layout == 'none' && matrix.feature == 'none' }}
        run: |
          cargo build --no-default-features
          cargo test --no-default-features
      - if: ${{ matrix.layout != 'none' && matrix.feature == 'none' }}
        run: |
          cargo build --no-default-features --features ${{ matrix.layout }}
          cargo test --no-default-features --features ${{ matrix.layout }}
      - if: ${{ matrix.layout == 'none' && matrix.feature != 'none' }}
        run: |
          cargo build --no-default-features --features ${{ matrix.feature }}
          cargo test --no-default-features --features ${{ matrix.feature }}
      - if: ${{ matrix.layout != 'none' && matrix.feature != 'none' }}
        run: |
          cargo build --no-default-features --features ${{ matrix.layout }},${{ matrix.feature }}
          cargo test --no-default-features --features ${{ matrix.layout }},${{ matrix.feature }}

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo +nightly clippy --workspace -- -D warnings

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo doc
        env:
          RUSTDOCFLAGS: "-D warnings"

  markdownlint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Run Markdown Lint
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_MARKDOWN: true
          DEFAULT_BRANCH: master
