on:
  pull_request:
  push:
    branches:
      - main
      - 0.2.x
      - 0.3.x

name: Continuous integration

jobs:
  # None
  test-features-none:
    name: "Test Suite [Features: None]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo build --no-default-features
      - run: cargo test --no-default-features

  # Default
  test-features-default:
    name: "Test Suite [Features: Default]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build
      - run: cargo test

  test-features-default-with-serde:
    name: "Test Suite [Features: Default + serde]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --features serde
      - run: cargo test --features serde

  test-features-no-grid-nor-flexbox:
    name: "Test Suite [Features: std (no grid or flexbox)]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --no-default-features --features std
      - run: cargo test --no-default-features --features std

  # Flexbox
  test-features-flexbox:
    name: "Test Suite [Features: flexbox + std]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --no-default-features --features flexbox,std
      - run: cargo test --no-default-features --features flexbox,std

  # Grid
  test-features-grid:
    name: "Test Suite [Features: grid + std]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --no-default-features --features grid,std
      - run: cargo test --no-default-features --features grid,std

  test-features-grid-with-alloc:
    name: "Test Suite [Features: grid + alloc]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --no-default-features --features alloc,grid
      - run: cargo test --no-default-features --features alloc,grid

  test-features-alloc:
    name: "Test Suite [Features: alloc]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --no-default-features --features alloc
      - run: cargo test  --no-default-features --features alloc

  test-features-default-no-grid:
    name: "Test Suite [Features: std (no grid)]"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo build --no-default-features --features std
      - run: cargo test --no-default-features --features std

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo +nightly clippy --workspace -- -D warnings

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Leafwing-Studios/cargo-cache@v1
      - run: cargo doc
        env:
          RUSTDOCFLAGS: "-D warnings"

  markdownlint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Run Markdown Lint
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_MARKDOWN: true
          DEFAULT_BRANCH: master
  
  html-validation:
    name: HTML Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
            root: test_fixtures/
